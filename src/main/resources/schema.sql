DROP TABLE IF EXISTS MPA CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;
DROP TABLE IF EXISTS FILM_GENRE;
DROP TABLE IF EXISTS USERS_RELATIONSHIP;
DROP TABLE IF EXISTS LIKES;

CREATE TABLE MPA (
    mpa_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    category VARCHAR(5) NOT NULL
);

CREATE TABLE FILMS (
    film_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(200),
    release_date DATE NOT NULL,
    duration INT NOT NULL,
    mpa_id INT NOT NULL,
    rate INT,
    FOREIGN KEY (mpa_id) REFERENCES MPA
);

CREATE TABLE GENRES (
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    genre_name VARCHAR(20) NOT NULL
);

CREATE TABLE FILM_GENRE (
    film_id INT NOT NULL,
    genre_id INT NOT NULL,
    FOREIGN KEY (film_id) REFERENCES FILMS ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES GENRES
);

CREATE TABLE USERS (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(200) NOT NULL,
    email VARCHAR(200) NOT NULL,
    login VARCHAR(200) NOT NULL,
    birthday DATE NOT NULL
);

CREATE TABLE USERS_RELATIONSHIP (
    user_id INT NOT NULL,
    friend_id INT NOT NULL,
    status VARCHAR NOT NULL,
    FOREIGN KEY (user_id) REFERENCES USERS ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES USERS ON DELETE CASCADE
);

CREATE TABLE LIKES (
    film_id INT NOT NULL,
    user_id INT NOT NULL,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (film_id) REFERENCES FILMS ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES USERS ON DELETE CASCADE
);
